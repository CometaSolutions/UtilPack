version: '1.0.{build}-{branch}'
image: Ubuntu1804
services:
  - docker
cache:
  - 'nuget-package-dir'
  - 'docker-images'
#  - '/var/lib/docker/image'
environment:
  RELATIVE_NUGET_PACKAGE_DIR: 'nuget-package-dir/'
  RELATIVE_CS_OUTPUT: 'output/'
  CI_FOLDER: 'CI'
  BUILD_SCRIPT_WITHIN_CONTAINER: 'Build/build.sh'
  
artifacts:
  - path: 'output/bin/*/Release/*.nupkg'
  
init:
  - sh: git config --global core.autocrlf false
  - sh: appveyor UpdateBuild -Version "1.0.${APPVEYOR_BUILD_NUMBER}-${APPVEYOR_REPO_COMMIT0:8}"
install:
#   - sh: git submodule update --init --recursive
  - sh: 'mkdir "${APPVEYOR_BUILD_FOLDER}/git"'
  - sh: 'find "${APPVEYOR_BUILD_FOLDER}" -mindepth 1 -maxdepth 1 -not -name "git" -not -name "nuget-package-dir" -not -name "docker-images" -exec mv -t "${APPVEYOR_BUILD_FOLDER}/git" {} +'

# AppVeyor does not have docker images cache support, so use the normal cache for that.
  - sh: 'mkdir -p "${APPVEYOR_BUILD_FOLDER}/docker-images"'
  - sh: 'cp -R "${APPVEYOR_BUILD_FOLDER}/docker-images/." /var/lib/docker/image'
  - sh: 'sudo chown -R root:root /var/lib/docker/image'
  - sh: 'sudo chmod u=rwX,g=,o= /var/lib/docker/image'

build_script:
  - sh: '"${APPVEYOR_BUILD_FOLDER}/git/${CI_FOLDER}/build.sh"'
  - sh: 'sudo chown -R `id -u` "${APPVEYOR_BUILD_FOLDER}/${RELATIVE_CS_OUTPUT}"'

test_script:
  - sh: '${APPVEYOR_BUILD_FOLDER}/git/${CI_FOLDER}/test.sh'
  
deploy_script:
  - sh: '${APPVEYOR_BUILD_FOLDER}/git/${CI_FOLDER}/deploy.sh'
  
after_deploy:
  - sh: 'sudo chown -R `id -u` "${APPVEYOR_BUILD_FOLDER}/${RELATIVE_NUGET_PACKAGE_DIR}"'
# Remember to copy docker images to this folder for cache support
  - sh: 'sudo systemctl stop docker'
  - sh: 'sudo cp -R /var/lib/docker/image/. "${APPVEYOR_BUILD_FOLDER}/docker-images"'
  - sh: 'sudo chown -R `id -u`:`id -u` "${APPVEYOR_BUILD_FOLDER}/docker-images"'
