<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard1.6</TargetFramework>
  </PropertyGroup>
  
  <PropertyGroup>
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
    <TreatSpecificWarningsAsErrors />
    <CheckForOverflowUnderflow>True</CheckForOverflowUnderflow>
    <GeneratePackageOnBuild Condition=" '$(Configuration)' == 'Release' ">true</GeneratePackageOnBuild>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="15.1.1012" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\UtilPack.NuGet.Common.MSBuild\UtilPack.NuGet.Common.MSBuild.csproj" />
    <ProjectReference Include="..\NuGetUtils.Lib.Deployment\NuGetUtils.Lib.Deployment.csproj" />
  </ItemGroup>

  <!-- Assembly information stuff -->
  <PropertyGroup>
    <VersionPrefix>2.3.0</VersionPrefix>
    <VersionSuffix></VersionSuffix>
    <AssemblyTitle>$(AssemblyName)</AssemblyTitle>
    <Description>MSBuild task which utilizes UtilPack.NuGet.Deployment library in order to deploy NuGet packages so that they can be executed directly by dotnet.
The task in this package should be loaded by UtilPack.NuGet.MSBuild task factory.</Description>
  </PropertyGroup>

  <!-- NuGet package stuff -->
  <PropertyGroup>
    <PackageId>$(AssemblyName)</PackageId>
    <PackageVersion>$(VersionPrefix)</PackageVersion>
    <PackageVersion Condition=" '$(VersionSuffix)' != ''">$(PackageVersion)-$(VersionSuffix)</PackageVersion>
    <PackageReleaseNotes>Updated to newest (4.7.0) NuGet version..</PackageReleaseNotes>
    <PackageTags>utility nuget extensions deployment msbuild</PackageTags>
    <Title>NuGet Package Deployment MSBuild Task</Title>
    <PackageProjectUrl>$(RepositoryUrl)/tree/develop/Source/$(AssemblyName)</PackageProjectUrl>
  </PropertyGroup>

  <!--
  At least currently (9.5.2017) modifying VersionPrefix/VersionSuffix will cause the assemblyinfo.cs file to regenerate, but with old version strings (??).
  So... manually delete the file first when building in release mode.
  If we put BeforeTargets="Build", this will be executed *after* the target which generates the assembly info, so we must put the correct target in BeforeTargets attribute.
  -->
  <Target Name="DeleteAssemblyInfoFile" BeforeTargets="CoreGenerateAssemblyInfo">
    <Delete Condition=" '$(Configuration)' == 'Release' " Files="$(IntermediateOutputPath)$(MSBuildProjectName).AssemblyInfo.cs" />
  </Target>
</Project>