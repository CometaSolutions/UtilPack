<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard1.6;net46</TargetFrameworks>
  </PropertyGroup>

  <PropertyGroup>
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
    <TreatSpecificWarningsAsErrors />
    <CheckForOverflowUnderflow>True</CheckForOverflowUnderflow>
    <GeneratePackageOnBuild Condition=" '$(Configuration)' == 'Release' ">true</GeneratePackageOnBuild>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.DependencyModel" Version="2.1.0" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' != 'net451' ">
    <PackageReference Include="System.Threading.Tasks.Parallel" Version="4.3.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\NuGetUtils.Lib.Restore\NuGetUtils.Lib.Restore.csproj" />
  </ItemGroup>

  <!-- Assembly information stuff -->
  <PropertyGroup>
    <VersionPrefix>1.0.0</VersionPrefix>
    <VersionSuffix></VersionSuffix>
    <AssemblyTitle>$(AssemblyName)</AssemblyTitle>
    <Description>Library for deploying NuGet packages so that they can be directly executed by dotnet tool. All required functionality is in NuGetDeployment class.</Description>
  </PropertyGroup>

  <!-- NuGet package stuff -->
  <PropertyGroup>
    <PackageId>$(AssemblyName)</PackageId>
    <PackageVersion>$(VersionPrefix)</PackageVersion>
    <PackageVersion Condition=" '$(VersionSuffix)' != ''">$(PackageVersion)-$(VersionSuffix)</PackageVersion>
    <PackageReleaseNotes>Initial release after renaming the project from UtilPack.NuGet.Deployment.</PackageReleaseNotes>
    <PackageTags>utility nuget extensions deployment</PackageTags>
    <Title>NuGet Package Deployment</Title>
  </PropertyGroup>

  <!--
  At least currently (9.5.2017) modifying VersionPrefix/VersionSuffix will cause the assemblyinfo.cs file to regenerate, but with old version strings (??).
  So... manually delete the file first when building in release mode.
  If we put BeforeTargets="Build", this will be executed *after* the target which generates the assembly info, so we must put the correct target in BeforeTargets attribute.
  -->
  <Target Name="DeleteAssemblyInfoFile" BeforeTargets="CoreGenerateAssemblyInfo">
    <Delete Condition=" '$(Configuration)' == 'Release' " Files="$(IntermediateOutputPath)$(MSBuildProjectName).AssemblyInfo.cs" />
  </Target>

</Project>