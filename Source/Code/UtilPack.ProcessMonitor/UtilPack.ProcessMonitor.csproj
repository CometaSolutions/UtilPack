<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net40;net45;netstandard2.0;netcoreapp1.1;netcoreapp2.0;netcoreapp2.1</TargetFrameworks>
  </PropertyGroup>

  <PropertyGroup>
    <CheckForOverflowUnderflow>True</CheckForOverflowUnderflow>
  </PropertyGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net45' ">
    <Reference Include="System.Runtime" />
    <Reference Include="System.Threading.Tasks" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\UtilPack\UtilPack.csproj" />
  </ItemGroup>

  <!-- Assembly information stuff -->
  <PropertyGroup>
    <VersionPrefix>1.0.0</VersionPrefix>
    <VersionSuffix></VersionSuffix>
    <AssemblyTitle>$(AssemblyName)</AssemblyTitle>
    <Description>Easy-to-use API for spawning processes and waiting for their exit while keeping an eye on CancellationToken. Typically, extension and utitily methods of ProcessMonitorWithGracefulCancelability class from this package are used.</Description>
  </PropertyGroup>

  <!-- NuGet package stuff -->
  <PropertyGroup>
    <PackageId>$(AssemblyName)</PackageId>
    <PackageVersion>$(VersionPrefix)</PackageVersion>
    <PackageVersion Condition=" '$(VersionSuffix)' != ''">$(PackageVersion)-$(VersionSuffix)</PackageVersion>
    <PackageReleaseNotes>Initial release.</PackageReleaseNotes>
    <PackageTags>utility async tabular data</PackageTags>
    <Title>Process Monitoring</Title>
  </PropertyGroup>

  <Import Project="$(CIPropsFilePath)" Condition=" '$(CIPropsFilePath)' != '' and Exists('$(CIPropsFilePath)') " />

</Project>
