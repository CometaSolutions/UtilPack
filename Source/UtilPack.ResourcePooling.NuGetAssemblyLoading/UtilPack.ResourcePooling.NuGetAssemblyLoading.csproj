<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
      <TargetFrameworks>netstandard1.6;net46</TargetFrameworks>
   </PropertyGroup>

   <PropertyGroup>
      <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
      <TreatSpecificWarningsAsErrors />
      <CheckForOverflowUnderflow>True</CheckForOverflowUnderflow>
      <LangVersion>latest</LangVersion>
      <GeneratePackageOnBuild Condition=" '$(Configuration)' == 'Release' ">true</GeneratePackageOnBuild>
   </PropertyGroup>

   <ItemGroup>
      <ProjectReference Include="..\UtilPack.NuGet.AssemblyLoading\UtilPack.NuGet.AssemblyLoading.csproj" />
      <ProjectReference Include="..\UtilPack.ResourcePooling\UtilPack.ResourcePooling.csproj" />
   </ItemGroup>

   <!-- Assembly information stuff -->
   <PropertyGroup>
      <VersionPrefix>1.0.0</VersionPrefix>
      <VersionSuffix></VersionSuffix>
      <AssemblyTitle>$(AssemblyName)</AssemblyTitle>
      <Description>Library containing required types and methods for loading AsyncFactory dynamically from NuGet package assembly.</Description>
   </PropertyGroup>

   <!-- NuGet package stuff -->
   <PropertyGroup>
      <PackageId>$(AssemblyName)</PackageId>
      <PackageVersion>$(VersionPrefix)</PackageVersion>
      <PackageVersion Condition=" '$(VersionSuffix)' != ''">$(PackageVersion)-$(VersionSuffix)</PackageVersion>
      <PackageReleaseNotes>Initial release.</PackageReleaseNotes>
      <PackageTags>utility nuget extensions dynamically load assembly resource pool async</PackageTags>
      <Title>Resource Pooling Dynamic NuGet Assembly Loading</Title>
      <PackageProjectUrl>$(RepositoryUrl)/tree/develop/Source/$(AssemblyName)</PackageProjectUrl>
   </PropertyGroup>

   <!--
  At least currently (9.5.2017) modifying VersionPrefix/VersionSuffix will cause the assemblyinfo.cs file to regenerate, but with old version strings (??).
  So... manually delete the file first when building in release mode.
  If we put BeforeTargets="Build", this will be executed *after* the target which generates the assembly info, so we must put the correct target in BeforeTargets attribute.
  -->
   <Target Name="DeleteAssemblyInfoFile" BeforeTargets="CoreGenerateAssemblyInfo">
      <Delete Condition=" '$(Configuration)' == 'Release' " Files="$(IntermediateOutputPath)$(MSBuildProjectName).AssemblyInfo.cs" />
   </Target>

</Project>