<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net45;netcoreapp1.1</TargetFrameworks>
  </PropertyGroup>

  <PropertyGroup>
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
    <TreatSpecificWarningsAsErrors />
    <CheckForOverflowUnderflow>True</CheckForOverflowUnderflow>
  </PropertyGroup>

  <PropertyGroup>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <GenerateBindingRedirectsOutputType>true</GenerateBindingRedirectsOutputType>
    <DevelopmentDependency>true</DevelopmentDependency>
    <IncludeBuildOutput>false</IncludeBuildOutput>
  </PropertyGroup>

  <ItemDefinitionGroup>
    <PackageReference>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <ProjectReference>
      <PrivateAssets>all</PrivateAssets>
    </ProjectReference>
  </ItemDefinitionGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'net45' ">
    <PackageReference Include="Microsoft.Build.Framework" Version="14.3" />
    <PackageReference Include="System.Reflection.Emit" Version="4.3.0" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' != 'net45'">
    <PackageReference Include="Microsoft.Build.Framework" Version="15.1.548" />
    <PackageReference Include="System.Runtime.Loader" Version="4.3.0" />
  </ItemGroup>
  
  <ItemGroup>
    <ProjectReference Include="..\UtilPack.NuGet\UtilPack.NuGet.csproj" />
  </ItemGroup>

  <ItemGroup>
    <None Include="build\**">
      <Pack>true</Pack>
      <PackagePath>build\%(RecursiveDir)%(FileName)%(Extension)</PackagePath>
    </None>
  </ItemGroup>

  <!-- Collect all dependencies and include them in the package itself, next to the Task assembly. -->
  <Target Name="CollectRuntimeOutputs" BeforeTargets="_GetPackageFiles">
    <ItemGroup>
      <Content Include="$(OutputPath)**\*.dll;$(OutputPath)**\*.dll.config;$(OutputPath)**\*.json">
        <Pack>true</Pack>
        <PackagePath>build\</PackagePath>
      </Content>
    </ItemGroup>
  </Target>

  <!-- Assembly information stuff -->
  <PropertyGroup>
    <VersionPrefix>1.0.0</VersionPrefix>
    <VersionSuffix>RC1</VersionSuffix>
    <Authors>Stanislav Muhametsin</Authors>
    <Company>Cometa Solutions Ltd</Company>
    <NeutralLanguage>en-US</NeutralLanguage>
    <AssemblyTitle>UtilPack.NuGet.MSBuild</AssemblyTitle>
    <Product>UtilPack</Product>
    <Description>Provides easy way to execute NuGet-based MSBuild tasks.</Description>
    <Copyright>Stanislav Muhametsin</Copyright>
    <AssemblyOriginatorKeyFilePath>$(MSBuildProjectDirectory)\..\..\Keys\$(Product).snk</AssemblyOriginatorKeyFilePath>
  </PropertyGroup>

  <!-- Assembly signing stuff -->
  <PropertyGroup Condition="'$(Configuration)' == 'Release' and Exists('$(AssemblyOriginatorKeyFilePath)')">
    <AssemblyOriginatorKeyFile>$(AssemblyOriginatorKeyFilePath)</AssemblyOriginatorKeyFile>
    <SignAssembly>true</SignAssembly>
  </PropertyGroup>

  <!-- Disable all debug information in release mode-->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release'">
    <DebugType>none</DebugType>
    <DebugSymbols>False</DebugSymbols>
    <!--<GenerateDocumentationFile>true</GenerateDocumentationFile>-->
  </PropertyGroup>

  <!-- NuGet package stuff -->
  <PropertyGroup>
    <NuspecFile>PackageInfo.nuspec</NuspecFile>
    <!--<PackageId>$(AssemblyName)</PackageId>
    <PackageVersion>$(VersionPrefix)</PackageVersion>
    <PackageVersion Condition=" '$(VersionSuffix)' != ''">$(PackageVersion)-$(VersionSuffix)</PackageVersion>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageReleaseNotes>Initial release.</PackageReleaseNotes>
    <PackageTags>utility nuget extensions msbuild task package resolve</PackageTags>
    <Title>MSBuild Task Factory for NuGet-Oriented MSBuild Tasks</Title>
    <PackageProjectUrl>https://github.com/CometaSolutions/UtilPack</PackageProjectUrl>
    <RepositoryUrl>$(PackageProjectUrl)</RepositoryUrl>
    <PackageLicenseUrl>https://www.apache.org/licenses/LICENSE-2.0</PackageLicenseUrl>-->
  </PropertyGroup>

  <!--
  At least currently (9.5.2017) modifying VersionPrefix/VersionSuffix will cause the assemblyinfo.cs file to regenerate, but with old version strings (??).
  So... manually delete the file first when building in release mode.
  If we put BeforeTargets="Build", this will be executed *after* the target which generates the assembly info, so we must put the correct target in BeforeTargets attribute.
  -->
  <Target Name="DeleteAssemblyInfoFile" BeforeTargets="CoreGenerateAssemblyInfo">
    <Delete Condition=" '$(Configuration)' == 'Release' " Files="$(IntermediateOutputPath)$(MSBuildProjectName).AssemblyInfo.cs" />
  </Target>

</Project>