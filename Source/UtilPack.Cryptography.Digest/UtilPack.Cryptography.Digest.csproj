<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard1.0;net40;net45</TargetFrameworks>
  </PropertyGroup>

  <PropertyGroup>
    <CheckForOverflowUnderflow>True</CheckForOverflowUnderflow>
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
    <TreatSpecificWarningsAsErrors />
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
  </PropertyGroup>

  <!-- Assembly information stuff -->
  <PropertyGroup>
    <VersionPrefix>1.0.0</VersionPrefix>
    <VersionSuffix>RC3</VersionSuffix>
    <Authors>Stanislav Muhametsin</Authors>
    <Company>Cometa Solutions Ltd</Company>
    <NeutralLanguage>en-US</NeutralLanguage>
    <AssemblyTitle>UtilPack.Cryptography.Digest</AssemblyTitle>
    <Product>UtilPack</Product>
    <Description>Provides block-based digest-producing cryptographical algorithms. Also provides concrete implementation for RandomGenerator interface of UtilPack.Cryptography package.</Description>
    <Copyright>Stanislav Muhametsin</Copyright>
    <AssemblyOriginatorKeyFilePath>$(MSBuildProjectDirectory)\..\..\Keys\$(Product).snk</AssemblyOriginatorKeyFilePath>
  </PropertyGroup>

  <!-- Assembly signing stuff -->
  <PropertyGroup Condition="'$(Configuration)' == 'Release' and Exists('$(AssemblyOriginatorKeyFilePath)')">
    <AssemblyOriginatorKeyFile>$(AssemblyOriginatorKeyFilePath)</AssemblyOriginatorKeyFile>
    <SignAssembly>true</SignAssembly>
  </PropertyGroup>

  <!-- Disable all debug information in release mode-->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release'">
    <DebugType>none</DebugType>
    <DebugSymbols>False</DebugSymbols>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <!-- NuGet package stuff -->
  <PropertyGroup>
    <PackageId>$(AssemblyName)</PackageId>
    <PackageVersion>$(VersionPrefix)</PackageVersion>
    <PackageVersion Condition=" '$(VersionSuffix)' != ''">$(PackageVersion)-$(VersionSuffix)</PackageVersion>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageReleaseNotes>Fixed type which caused critical bug: if small data packets were used to compute digest, the value from new one would overwrite previous. Now digest algorithms work correctly even in small subsequent data packets.</PackageReleaseNotes>
    <PackageTags>utility cryptography random block hash digest md5 sha128 sha256 sha384 sha512</PackageTags>
    <Title>Cryptographic Digest Functions</Title>
    <PackageProjectUrl>https://github.com/CometaSolutions/UtilPack</PackageProjectUrl>
    <RepositoryUrl>$(PackageProjectUrl)</RepositoryUrl>
    <PackageLicenseUrl>https://www.apache.org/licenses/LICENSE-2.0</PackageLicenseUrl>
  </PropertyGroup>

  <!--
  At least currently (9.5.2017) modifying VersionPrefix/VersionSuffix will cause the assemblyinfo.cs file to regenerate, but with old version strings (??).
  So... manually delete the file first when building in release mode.
  If we put BeforeTargets="Build", this will be executed *after* the target which generates the assembly info, so we must put the correct target in BeforeTargets attribute.
  -->
  <Target Name="DeleteAssemblyInfoFile" BeforeTargets="CoreGenerateAssemblyInfo">
    <Delete Condition=" '$(Configuration)' == 'Release' " Files="$(IntermediateOutputPath)$(MSBuildProjectName).AssemblyInfo.cs" />
  </Target>
  

  <PropertyGroup>
    <AlgorithmsDirectory>$(MSBuildProjectDirectory)/Algorithms</AlgorithmsDirectory>
    <AlgorithmGeneratorFile>$(AlgorithmsDirectory)/GenerateAlgorithms.tt.msbuild</AlgorithmGeneratorFile>
  </PropertyGroup>

  <ItemGroup>
    <AlgorithmGeneratorFileItem Include="$(AlgorithmGeneratorFile)" />
    <GeneratedAlgorithmFiles Include="$(AlgorithmsDirectory)/MD5.cs;$(AlgorithmsDirectory)/SHA128.cs;$(AlgorithmsDirectory)/SHA256.cs;$(AlgorithmsDirectory)/SHA384.cs;$(AlgorithmsDirectory)/SHA512.cs" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\UtilPack.Cryptography\UtilPack.Cryptography.csproj" />
  </ItemGroup>

  <PropertyGroup>
    <AlgorithmGeneratorFileLastChanged>$([System.IO.File]::GetLastWriteTime($(AlgorithmGeneratorFile)).Ticks)</AlgorithmGeneratorFileLastChanged>
  </PropertyGroup>

  <Target Name="GenerateAlgorithmSources" BeforeTargets="BeforeBuild" Inputs="$(AlgorithmGeneratorFile)" Outputs="@(GeneratedAlgorithmFiles)">
    <PropertyGroup>
      <T4ExecPrefix>$(MSBuildExtensionsPath)\..\Common7\IDE\TextTransform.exe</T4ExecPrefix>
      <T4ExecSuffix>$(AlgorithmGeneratorFile)</T4ExecSuffix>
    </PropertyGroup>
    <Exec Condition="!Exists(%(GeneratedAlgorithmFiles.FullPath)) or $([System.DateTime]::Parse(%(GeneratedAlgorithmFiles.ModifiedTime)).Ticks) &lt; $(AlgorithmGeneratorFileLastChanged)" Command="&quot;$(T4ExecPrefix)&quot; -out &quot;@(GeneratedAlgorithmFiles->'%(FullPath)')&quot; -a &quot;!!Algorithm!@(GeneratedAlgorithmFiles->'%(Filename)')&quot; &quot;$(T4ExecSuffix)&quot;" />
  </Target>

</Project>