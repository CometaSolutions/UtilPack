<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard1.0;netstandard1.1;netstandard1.5;netstandard1.6;netstandard2.0;net40;net45</TargetFrameworks>
  </PropertyGroup>

  <PropertyGroup>
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
    <TreatSpecificWarningsAsErrors />
    <LangVersion>latest</LangVersion>
  </PropertyGroup>
  
  <PropertyGroup>
    <DefineConstants Condition=" '$(TargetFramework)' != 'net40' and '$(TargetFramework)' != 'net45' ">$(DefineConstants);IS_NETSTANDARD</DefineConstants>
  </PropertyGroup>

  <ItemGroup Condition=" '$(TargetFramework)' != 'net40' ">
    <PackageReference Include="System.Threading.Tasks.Extensions" Version="4.3.0" />
    <PackageReference Include="System.ValueTuple" Version="4.3.0" />
  </ItemGroup>
  
  <ItemGroup Condition=" '$(TargetFramework)' == 'net45' ">
    <Reference Include="System.Runtime" />
    <Reference Include="System.Threading.Tasks" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net40' ">
    <PackageReference Include="Theraot.Core" Version="1.0.5" />
  </ItemGroup>
  
  <!-- Assembly information stuff -->
  <PropertyGroup>
    <VersionPrefix>1.7.1</VersionPrefix>
    <VersionSuffix></VersionSuffix>
    <AssemblyTitle>UtilPack.Common</AssemblyTitle>
    <Description>Library containing useful and generic methods, which are missing from one or more BCL.</Description>
  </PropertyGroup>
   
  <!-- NuGet package stuff -->
  <PropertyGroup>
    <PackageId>$(AssemblyName)</PackageId>
    <PackageVersion>$(VersionPrefix)</PackageVersion>
    <PackageVersion Condition=" '$(VersionSuffix)' != ''">$(PackageVersion)-$(VersionSuffix)</PackageVersion>
    <PackageReleaseNotes>Removed Prepend and Append extension methods for IEnumerable&lt;T&gt; from netstandard2.0 version.</PackageReleaseNotes>
    <PackageTags>bcl utility binary serialization collection extensions</PackageTags>
    <Title>Utility Package for CLR</Title>
  </PropertyGroup>
  
  <!-- CI stuff. When in CI, also include the IL(D)Asm stuff. -->
  
  <Import Project="$(CIPropsFilePath)" Condition=" '$(CIPropsFilePath)' != '' and Exists('$(CIPropsFilePath)') " />
  
  <PropertyGroup Condition=" '$(IsCIBuild)' == 'true' ">
    <ILPackagesVersion>$([System.IO.File]::ReadAllText($([MSBuild]::GetPathOfFileAbove('ILPackagesVersion.txt'))))</ILPackagesVersion>
  </PropertyGroup>
  
  <ItemGroup Condition=" '$(IsCIBuild)' == 'true' ">
    <PackageReference Include="runtime.alpine.3.6-x64.Microsoft.NETCore.ILDAsm" Version="$(ILPackagesVersion)" ExcludeAssets="All" PrivateAssets="All" />
    <PackageReference Include="runtime.alpine.3.6-x64.Microsoft.NETCore.ILAsm" Version="$(ILPackagesVersion)" ExcludeAssets="All" PrivateAssets="All" />
  </ItemGroup>

</Project>