<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard1.3;netstandard1.5;net40;net45</TargetFrameworks>
  </PropertyGroup>

  <PropertyGroup>
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
    <TreatSpecificWarningsAsErrors />
    <CheckForOverflowUnderflow>True</CheckForOverflowUnderflow>
    <LangVersion>latest</LangVersion>
    <GeneratePackageOnBuild Condition=" '$(Configuration)' == 'Release' ">true</GeneratePackageOnBuild>
  </PropertyGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'netstandard1.3' or '$(TargetFramework)' == 'netstandard1.5' ">
    <PackageReference Include="System.Diagnostics.Process" Version="4.3.0" />
  </ItemGroup>
  
  <ItemGroup Condition=" '$(TargetFramework)' == 'netstandard1.5' ">
    <PackageReference Include="System.Runtime.Loader" Version="4.3.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\UtilPack\UtilPack.csproj" />
  </ItemGroup>

  <!-- Assembly information stuff -->
  <PropertyGroup>
    <VersionPrefix>1.2.0</VersionPrefix>
    <VersionSuffix></VersionSuffix>
    <Authors>Stanislav Muhametsin</Authors>
    <Company>Cometa Solutions Ltd</Company>
    <NeutralLanguage>en-US</NeutralLanguage>
    <AssemblyTitle>$(AssemblyName)</AssemblyTitle>
    <Product>UtilPack</Product>
    <Description>Library to start, monitor, and restart processes. Provides way to gracefully shutdown process-to-be-monitored via semaphore, and also to enable the process to signal that it needs to be restarted, also via semaphore.</Description>
    <Copyright>Stanislav Muhametsin</Copyright>
    <AssemblyOriginatorKeyFilePath>$(MSBuildProjectDirectory)\..\..\Keys\$(Product).snk</AssemblyOriginatorKeyFilePath>
  </PropertyGroup>

  <!-- Assembly signing stuff -->
  <PropertyGroup Condition="'$(Configuration)' == 'Release' and Exists('$(AssemblyOriginatorKeyFilePath)')">
    <AssemblyOriginatorKeyFile>$(AssemblyOriginatorKeyFilePath)</AssemblyOriginatorKeyFile>
    <SignAssembly>true</SignAssembly>
  </PropertyGroup>

  <!-- Disable all debug information in release mode-->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release'">
    <DebugType>none</DebugType>
    <DebugSymbols>False</DebugSymbols>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <!-- NuGet package stuff -->
  <PropertyGroup>
    <PackageId>$(AssemblyName)</PackageId>
    <PackageVersion>$(VersionPrefix)</PackageVersion>
    <PackageVersion Condition=" '$(VersionSuffix)' != ''">$(PackageVersion)-$(VersionSuffix)</PackageVersion>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageReleaseNotes>Added ability to declare shutdown/restart functionality as optional, so that the process would still be started even if e.g. named semaphores are not available on the platform.</PackageReleaseNotes>
    <PackageTags>utility extensions process monitor start restart shutdown</PackageTags>
    <Title>Advanced Process Monitoring</Title>
    <RepositoryUrl>https://github.com/CometaSolutions/UtilPack</RepositoryUrl>
    <PackageProjectUrl>$(RepositoryUrl)/tree/develop/Source/$(AssemblyName)</PackageProjectUrl>
    <PackageLicenseUrl>https://www.apache.org/licenses/LICENSE-2.0</PackageLicenseUrl>
  </PropertyGroup>

  <!--
  At least currently (9.5.2017) modifying VersionPrefix/VersionSuffix will cause the assemblyinfo.cs file to regenerate, but with old version strings (??).
  So... manually delete the file first when building in release mode.
  If we put BeforeTargets="Build", this will be executed *after* the target which generates the assembly info, so we must put the correct target in BeforeTargets attribute.
  -->
  <Target Name="DeleteAssemblyInfoFile" BeforeTargets="CoreGenerateAssemblyInfo">
    <Delete Condition=" '$(Configuration)' == 'Release' " Files="$(IntermediateOutputPath)$(MSBuildProjectName).AssemblyInfo.cs" />
  </Target>
</Project>